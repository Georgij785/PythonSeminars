"""
Задание 2. Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).
Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.
Решите через рекурсию. В задании нельзя применять циклы.
Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""
counts = [0, 0]


def count_numbers(n):
    if len(str(n)) == 1:
        if n % 2 == 0:
            counts[0] += 1
        else:
            counts[1] += 1
        n = n // 10
        return
    else:
        if n % 2 == 0:
            counts[0] += 1
        else:
            counts[1] += 1
        n = n // 10
    count_numbers(n)


count_numbers(int(input("введите число > ")))
print(f"Количество четных и нечетных цифр в числе равно: {counts}")
